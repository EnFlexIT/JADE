<?xml version="1.0" encoding="UTF-8"?>

<project name="JADE-LEAP for PJAVA" default="do-lib">
	<!-- PROPERTIES specific for PJAVA -->
	<property name="src" value="${pjava-root}/src"/>
	<property name="classes" value="${pjava-root}/classes"/>
	<property name="lib" value="${pjava-root}/lib"/>
	<property name="doc" value="${pjava-root}/doc"/>
	<property name="pjava-title" value="${title} v${version} for PJAVA"/>

        <!--Filtered src directory property--> 
        <property name="filtered.src" location="${pjava-root}/filtered/src"/>

	<!-- INIT -->
	<target name="do-init" 
	        description="Create the appropriate directories">
		<mkdir dir="${pjava-root}"/>
		<mkdir dir="${src}"/>
		<mkdir dir="${classes}"/>
		<mkdir dir="${lib}"/>
		<mkdir dir="${doc}"/>
	</target>

	
	<!-- SETUP -->
	<target name="do-setup" depends="do-init"
	        description="Setup the build environment">
	  <!-- 1) Copy JADE sources -->
	  <copy todir="${src}">
			<fileset dir="${jade-src}">
				<include name="**/starlight/**"/>
				<include name="**/jade/**"/>
				<exclude name="**/jade/imtp/**"/>
				<exclude name="**/jade/mtp/iiop/**"/>
				<exclude name="**/jade/tools/**"/>
			</fileset>
		</copy>
	  <!-- 2) Copy LEAP sources -->
	  <copy todir="${src}" overwrite="yes">
			<fileset dir="${leap-src}">
			  <exclude name="**/jade/mtp/http/**"/>
			  <exclude name="**/jade/gui/**"/>
				<exclude name="**/*.java@"/>
				<exclude name="**/*.java#"/>
			</fileset>
		</copy>
	  <!-- 3) Preprocess the whole -->
	  <pproc basedir="${src}" type="pjava"/>
	</target>

	
	<!-- RESET -->
	<target name="do-reset"
	        description="Reset the build environment">
		<delete dir = "${pjava-root}"/>
	</target>

	
	<!-- CLEAN -->
	<target name="do-clean"
	        description="Clean class files">
		<delete dir = "${classes}"/>
		<delete dir = "${doc}"/>
		<delete dir = "${lib}"/>
		<mkdir dir="${classes}"/>
		<mkdir dir="${lib}"/>
		<mkdir dir="${doc}"/>
	</target>

	
	<!-- PARSERS -->
	<target name="do-parsers" if="javacc-home"
	        description="Generate ACL and SL parsers from .jj files">
  	<!-- ACL Parser -->
		<javacc target="${src}/jade/lang/acl/ACLParser.jj"
		        javacchome="${javacc-home}"/>
  	<!-- SL Parser -->
		<javacc target="${src}/jade/content/lang/sl/SLParser.jj"
		        javacchome="${javacc-home}"/>
	</target>


	<!-- COMPILE -->
	<target name="do-compile" depends="do-setup, do-parsers"
	        description="Compile sources">
	  
		<javac srcdir="${src}"
		       destdir="${classes}"
		       debug="${debug-build}"
		       optimize="${optimised-build}"
		       deprecation="off"
		       classpath="${boot-java-1.1-classes}"
		       bootclasspath="${boot-java-1.1-classes}"
		       compiler="javac1.1"
		       target="1.1"/>
	</target>


	<!-- LIB -->
	<target name="do-lib" depends="do-compile"
	        description="Create Jade-leap jar file">
		<delete file="${lib}/JadeLeap.jar" quiet="true"/>
		<jar jarfile="${lib}/JadeLeap.jar" basedir="${classes}"/>
	</target>

	
	<!-- JAVADOC -->
	<target name="do-javadoc" depends="do-setup"
	        description="Generate javadoc">
		<javadoc sourcepath="${src}"
		         destdir="${doc}"
		         classpath="${classes};${boot-java-1.1-classes}"
		         doctitle="&lt;h1>${pjava-title}&lt;/h1>"
		         bottom="${javadoc-footer}"
		         verbose="false"
		         windowtitle="${pjava-title}"
                         packagenames="jade.*, starlight.* "/>
	</target>
	
	
	<!-- DEMO -->
	<target name="do-demo" depends="do-init, do-compile"
	        description="Build the demo">
		<delete dir = "${demo-preprocessed}" quiet="true"/>
		<delete dir = "${demo-classes}" quiet="true"/>
		<mkdir dir="${demo-preprocessed}"/>
		<mkdir dir="${demo-classes}"/>
		
	  <copy todir="${demo-preprocessed}" overwrite="yes">
			<fileset dir="${demo-src}">
			</fileset>
		</copy>
		
	  <pproc basedir="${demo-preprocessed}" type="pjava"/>
	  
		<javac srcdir="${demo-preprocessed}"
		       destdir="${demo-classes}"
		       classpath="${classes}"
		       debug="${debug-build}"
		       optimize="${optimised-build}"
		       deprecation="off"
		       bootclasspath="${boot-java-1.1-classes}"
		       target="1.1"/>
		       
	  <copy todir="${demo-classes}">
			<fileset dir="${classes}">
			</fileset>
		</copy>
		
		<delete file="${root}/demo/demoPjava.jar" quiet="true"/>
		<jar jarfile="${root}/demo/demoPjava.jar" basedir="${demo-classes}"/>
	</target>
	
</project>
