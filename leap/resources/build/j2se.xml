<?xml version="1.0" encoding="UTF-8"?>

<project name="JADE-LEAP for J2SE" default="do-lib">
	<!-- PROPERTIES specific for J2SE -->
	<property name="src" value="${j2se-root}/src"/>
	<property name="classes" value="${j2se-root}/classes"/>
	<property name="lib" value="${j2se-root}/lib"/>
	<property name="doc" value="${j2se-root}/doc"/>
	<property name="j2se-title" value="${title} v${version} for J2SE"/>

        <!--Filtered src directory property--> 
        <property name="filtered.src" location="${j2se-root}/filtered/src"/>

	<!-- INIT -->
	<target name="do-init"  
	        description="Create the appropriate directories">
		<mkdir dir="${j2se-root}"/>
		<mkdir dir="${src}"/>
		<mkdir dir="${classes}"/>
		<mkdir dir="${lib}"/>
		<mkdir dir="${doc}"/>
	</target>

	
	<!-- SETUP -->
	<target name="do-setup" depends="do-init"
	        description="Setup the build environment">
	  <!-- 1) Copy JADE sources -->
	  <copy todir="${src}">
			<fileset dir="${jade-src}">
				<include name="**/FIPA/**"/>
				<include name="**/starlight/**"/>
				<include name="**/jade/**"/>
				<exclude name="**/jade/imtp/**"/>
			</fileset>
		</copy>
	  <!-- 2) Copy LEAP sources -->
	  <copy todir="${src}" overwrite="yes">
			<fileset dir="${leap-src}">
				<exclude name="**/*.java@"/>
				<exclude name="**/*.java#"/>
				<exclude name="**/jade/util/leap/**"/>
			</fileset>
		</copy>
	  <!-- 3) Preprocess the whole -->
	  <pproc basedir="${src}" type="j2se"/>
	</target>

	
	<!-- RESET -->
	<target name="do-reset"
	        description="Reset the build environment">
		<delete dir = "${j2se-root}"/>
	</target>

	
	<!-- CLEAN -->
	<target name="do-clean"
	        description="Clean class files">
		<delete dir = "${classes}"/>
		<delete dir = "${doc}"/>
		<delete dir = "${lib}"/>
		<mkdir dir="${classes}"/>
		<mkdir dir="${lib}"/>
		<mkdir dir="${doc}"/>
	</target>

	
	<!-- PARSERS -->
	<target name="do-parsers" if="javacc-home"
	        description="Generate ACL and SL parsers from .jj files">
  	<!-- ACL Parser -->
		<javacc target="${src}/jade/lang/acl/ACLParser.jj"
		        javacchome="${javacc-home}"/>
  	<!-- SL Parser -->
		<javacc target="${src}/jade/content/lang/sl/SLParser.jj"
		        javacchome="${javacc-home}"/>
	</target>


	<!-- COMPILE -->
	<target name="do-compile" depends="do-setup, do-parsers"
	        description="Compile sources">
		<javac srcdir="${src}"
		       destdir="${classes}"
		       debug="${javac.debug}"
		       optimize="${javac.optimize}"
		       target="1.1"
		       deprecation="off"/>
		<!-- Ensure the images for the tools are also copied -->
		<mkdir dir="${classes}/jade/tools/dfgui/images"/>
		<mkdir dir="${classes}/jade/tools/DummyAgent/images"/>
		<mkdir dir="${classes}/jade/tools/introspector/gui/images"/>
		<mkdir dir="${classes}/jade/tools/sniffer/images"/>
		<mkdir dir="${classes}/jade/tools/rma/images"/>
		<mkdir dir="${classes}/jade/gui/images"/>
		<copy todir="${classes}/jade/tools/dfgui/images">
		    <fileset dir="${src}/jade/tools/dfgui/images" includes="*.gif"/>
		</copy>
		<copy todir="${classes}/jade/tools/DummyAgent/images">
		    <fileset dir="${src}/jade/tools/DummyAgent/images" includes="*.gif"/>
		</copy>
		<copy todir="${classes}/jade/tools/introspector/gui/images">
		    <fileset dir="${src}/jade/tools/introspector/gui/images" includes="*.gif *.jpg"/>
		</copy>
		<copy todir="${classes}/jade/tools/sniffer/images">
		    <fileset dir="${src}/jade/tools/sniffer/images" includes="*.gif *.jpg"/>
		</copy>
		<copy todir="${classes}/jade/tools/rma/images">
		    <fileset dir="${src}/jade/tools/rma/images" includes="*.gif *.jpg"/>
		</copy>
		<copy todir="${classes}/jade/gui/images">
		    <fileset dir="${src}/jade/gui/images" includes="*.gif *.jpg"/>
		</copy>
	</target>

	
	<!-- LIB -->
	<target name="do-lib" depends="do-compile"
	        description="Create Jade-leap jar file">
		<delete file="${lib}/JadeLeap.jar" quiet="true"/>
		<jar jarfile="${lib}/JadeLeap.jar" basedir="${classes}"/>
	</target>

	
	<!-- JAVADOC -->
	<target name="do-javadoc" depends="do-init"
	        description="Generate javadoc">
		<javadoc sourcepath="${src}"
		         destdir="${doc}"
		         classpath="${classes}"
		         doctitle="&lt;h1>${j2se-title}&lt;/h1>"
		         bottom="${javadoc-footer}"
		         verbose="false"
		         windowtitle="${j2se-title}"
		         packagenames="jade.*, FIPA, starlight.* "/>
	</target>

        <target name="do-apidoc" depends="do-init"
            description="Generate filtered javadoc">
            
            <!-- 1) Create filtered src directory -->
            <mkdir dir="${filtered.src}"/>
            
            <!-- 2) Copy JADE sources -->
            <copy todir="${filtered.src}" overwrite="yes">
                    <fileset dir="${src}"/>
            </copy>
            
            <!-- 3) Preprocess-->
            <pproc basedir="${filtered.src}" type="apidoc"/>
        
            <!-- 4) Generates javadoc-->
            <javadoc sourcepath="${filtered.src}"
                     destdir="${doc}"
                     classpath="${classes}"
                     doctitle="&lt;h1>${j2se-title}&lt;/h1>"
                     bottom="${javadoc-footer}"
                     verbose="false"
                     windowtitle="${j2se-title}"
                     packagenames="jade.*, FIPA, starlight.* "/>

            <!-- 5) Remove filtered src-->
            <delete dir="${filtered.src}"/>
        </target>


	<!-- DEMO -->
	<target name="do-demo" depends="do-init"
	        description="Build the demo">
		<delete dir = "${demo-preprocessed}" quiet="true"/>
		<delete dir = "${demo-classes}" quiet="true"/>
		<mkdir dir="${demo-preprocessed}"/>
		<mkdir dir="${demo-classes}"/>
		
	  <copy todir="${demo-preprocessed}" overwrite="yes">
			<fileset dir="${demo-src}">
			</fileset>
		</copy>
		
	  <pproc basedir="${demo-preprocessed}" type="j2se"/>
	  
		<javac srcdir="${demo-preprocessed}"
		       destdir="${demo-classes}"
		       classpath="${classes}"
		       debug="${javac.debug}"
		       optimize="${javac.optimize}"
		       deprecation="off"/>
		       
		<delete file="${root}/demo/demoJ2se.jar" quiet="true"/>
		<jar jarfile="${root}/demo/demoJ2se.jar" basedir="${demo-classes}"/>
	</target>

</project>
