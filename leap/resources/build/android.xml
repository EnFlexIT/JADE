<?xml version="1.0" encoding="UTF-8"?>

<!-- Note that targets in this ANT build file are always invoked by other targets in the 
     main JADE build file. In some cases they refer to properties that are not set locally -->
<project name="JADE for ANDROID" default="do-lib">
	<!-- PROPERTIES specific for ANDROID -->
	<property name="src" value="${android-root}/src"/>
	<property name="bin" value="${android-root}/bin"/>
	<property name="lib" value="${android-root}/lib"/>
	<property name="doc" value="${android-root}/doc"/>
	<property name="android-title" value="${title} v${version} for ANDROID"/>

	<!-- INIT -->
	<target name="do-init" description="Create the appropriate directories">
		<echo>do-init...</echo>
		<mkdir dir="${android-root}"/>
		<mkdir dir="${src}"/>
		<mkdir dir="${bin}"/>
		<mkdir dir="${doc}"/>
		<mkdir dir="${lib}"/>
	</target>

	<!-- SETUP -->
	<target name="do-setup" depends="do-init" description="Setup the build environment">
		<!-- 1) Copy JADE sources -->
		<copy todir="${src}">
			<fileset dir="${jade-src}">
				<include name="**/jade/**"/>
				<exclude name="**/jade/wrapper/gateway/DynamicJadeGateway.java"/>
				<exclude name="**/jade/wrapper/gateway/JadeGateway.java"/>
				<exclude name="**/jade/gui/**"/>
				<exclude name="**/jade/tools/applet/**"/>
				<exclude name="**/jade/tools/dfgui/**"/>
				<exclude name="**/jade/tools/DummyAgent/**"/>
				<exclude name="**/jade/tools/rma/**"/>
				<exclude name="**/jade/tools/sniffer/**"/>
				<exclude name="**/jade/tools/gui/**"/>
				<exclude name="**/jade/tools/testagent/**"/>
				<exclude name="**/jade/tools/logging/gui/**"/>
				<exclude name="**/jade/tools/logging/images/**"/>
				<exclude name="**/jade/tools/introspector/gui/**"/>
				<exclude name="**/jade/mtp/iiop/**"/>
				<exclude name="**/jade/imtp/rmi/**"/>
				<exclude name="**/jade/imtp/leap/sms/**"/>
				<exclude name="**/jade/tools/logging/LogManagerAgent.java"/>
				<exclude name="**/jade/tools/introspector/Introspector.java"/>
				<exclude name="**/jade/BootGUI.java"/>
				<exclude name="**/jade/domain/DFDBKB.java"/>
				<exclude name="**/jade/domain/DFHSQLKB.java"/>
			</fileset>
		</copy>
		<!-- 2) Copy JADE sources (final trim) -->
		<copy todir="${src}">
			<fileset dir="${jade-src}">
				<include name="**/jade/gui/GuiAgent.java"/>
				<include name="**/jade/gui/GuiEvent.java"/>
			</fileset>
		</copy>
		<!-- 3) Preprocess the whole -->
		<pproc basedir="${src}" type="android"/>
		<!-- 4) Copy the lib commons-codec -->
		<copy todir="${lib}/commons-codec" overwrite="yes">
			<fileset dir="${jade-src}/../lib/commons-codec"/>
		</copy>
	</target>


	<!-- RESET -->
	<target name="do-reset" description="Reset the build environment" depends="do-clean">
	</target>


	<!-- CLEAN -->
	<target name="do-clean" description="Clean class files">
		<delete dir = "${doc}"/>
		<delete dir = "${bin}"/>
		<delete dir = "${lib}"/>
		<delete file = "${android-root}/lib/JadeAndroid.jar"/>
		<delete includeemptydirs="true">
			<fileset dir="${src}">
				<include name="**/jade/**"/>
				<exclude name="**/jade/android/**"/>
			</fileset>
		</delete>
	</target>


	<!-- PARSERS -->
	<target name="do-parsers" if="javacc-home" description="Generate ACL and SL parsers from .jj files">
		<!-- ACL Parser -->
		<javacc target="${src}/jade/lang/acl/ACLParser.jj" javacchome="${javacc-home}"/>
		<!-- SL Parser -->
		<javacc target="${src}/jade/content/lang/sl/SLParser.jj" javacchome="${javacc-home}"/>
	</target>


	<!-- COMPILE -->
	<target name="do-compile" depends="do-setup, do-parsers, compile" description="Compile sources"/>

	<target name="compile" description="Compile sources">
		<javac srcdir="${src}"
		       destdir="${bin}"
		       debug="${debug-build}"
		       debuglevel="vars,lines,source"
		       optimize="${optimised-build}"
		       deprecation="off"
		       classpath="${android-platform-home}/android.jar;${lib}/commons-codec/commons-codec-1.3.jar"
		       fork="yes"
		       compiler="classic"
		       source="1.6"
		       target="1.6"/>
	</target>

	<!-- LIB -->
	<target name="do-lib" depends="do-compile" description="Create Jade-Android jar file">
		<delete file="${android-root}/lib/JadeAndroid.jar" quiet="true"/>
		<jar jarfile="${android-root}/lib/JadeAndroid.jar" basedir="${bin}"/>
	</target>


	<!-- JAVADOC -->
	<target name="do-javadoc" depends="do-setup" description="Generate javadoc">
		<javadoc sourcepath="${src}"
		         destdir="${doc}"
		         classpath="${bin}"
		         doctitle="&lt;h1>${android-title}&lt;/h1>"
		         bottom="${javadoc-footer}"
		         verbose="false"
		         windowtitle="${android-title}"
                 packagenames="jade.*"/>
	</target>

	<!-- DEMO -->
	<target name="check-resources">
		<echo>check-resources...</echo>
		<available file="${lib}/JadeAndroid.jar" property="JadeAndroid" value="${lib}/JadeAndroid.jar"/>
		<available file="${jade-home}/src/jade/Boot.java" property="jade-sources-available" value="true"/>
		<antcall target="get-android-jar"/>
	</target>

	<target name="get-android-jar" unless="JadeAndroid">
		<antcall target="create-android-jar"/>
		<antcall target="input-android-jar"/>
	</target>

	<target name="create-android-jar" if="jade-sources-available">
		<antcall target="do-lib"/>
	</target>

	<target name="input-android-jar" unless="jade-sources-available">
		<input message="Insert the pathname of the JADE-LEAP jar file for Android -->" addProperty="JadeAndroid"/>
		<mkdir dir="${lib}"/>
		<copy file="${JadeAndroid}" tofile="${lib}/JadeAndroid.jar"/>
	</target>

	<target name="do-demo"
		depends="do-init, check-resources"
		description="Build the demo">

		<property name="jade.project.name" value="demoAndroid"/>
		<delete>
			<fileset dir="${demo}" includes="${jade.project.name}*.ap*"/>
		</delete>
		<delete dir="${demo-preprocessed}" quiet="true"/>
		<delete dir="${demo-unverified}" quiet="true"/>
		<delete dir="${demo-classes}" quiet="true"/>
		<mkdir dir="${demo-preprocessed}"/>
		<mkdir dir="${demo-unverified}"/>
		<mkdir dir="${demo-classes}"/>

		<copy todir="${demo-preprocessed}" overwrite="yes">
			<fileset dir="${demo-src}">
			</fileset>
		</copy>

		<pproc basedir="${demo-preprocessed}" type="android"/>
				
		<property name="sdk.dir" value="${android-platform-home}/../.."/>
		<basename property="target" file="${android-platform-home}"/>

		<property name="source.dir" value="../${demo-preprocessed}"/>
		<property name="gen.dir" value="gen"/>
		<property name="resource.dir" value="res"/>
		<property name="asset.dir" value="assets"/>
		<property name="external.libs.dir" value="../${lib}"/>
		<property name="native.libs.dir" value="../${lib}"/>
		<property name="out.dir" value="."/>

	    <ant dir="${demo}" antfile="android_rules.xml"
	            target="release" inheritall="true" inheritrefs="true" />

	</target>


</project>
