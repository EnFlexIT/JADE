// Generated by Together/J
package demo.MeetingScheduler.CLP;

/**
 * This class implements an action of the ontology. 
 * @see OntologyObject
 */
public class Action extends OntologyObject {
  private int par;  // number of action parameters

public Action() {
super();
setType(ACTION_TYPE);
par=0;
}

  /**
   * returns the name of the actor, that is the agent that must perform the action 
   */
  public String getActor(){
return getSlotValue("actor");
  }  

  /**
   * sets the name of the actor, that is the agent that must perform the action 
   */
  public void setActor(String name){
SimpleValue obj = new SimpleValue();
obj.setValue(name);
addSlot("actor", obj);
  }   

  /**
   * returns the name of the action, that is the action type
   */
  public String getActionType(){
return getSlotValue("actiontype");
  }

  /**
   * sets the name of the action, that is the action type
   */
  public void setActionType(String name){
SimpleValue obj = new SimpleValue();
obj.setValue(name);
addSlot("actiontype", obj);
  }  
    
  /**
   * adds a paramter to the action 
   * @param param is the OntologyObject representing to parameter to add
   */
  public void addActionParameter(OntologyObject param){
addSlot(Integer.toString(par), param);
par++;
  } 

  /**
   * return the number of parameters of this action
   */
  public int getNumberOfActionParameters(){
return par;
  }

  /**
   * return the OntologyObject representing the parameter in the given ordinal position
   * @param position the position of the parameter
   */
  public OntologyObject getActionParameter(int position) {
return getSlot(Integer.toString(position));
  }

  /**
   * return the OntologyObject representing the parameter of given name
   * <p> For instance, the following action has two parameters, whose name are "user" and "wife"
   * <p> (e.g.) <code> (action (agent-name broker) (action-type register)
   * (action-parameters [(user (name Pantani)) (wife (name Giovanna))])) </code>
   * @param name is the name of the parameter to be returned
   */
  public OntologyObject getActionParameter(String name) {
int i=0;
OntologyObject obj;
while (i<par) {
 obj=getActionParameter(i);
 if (obj.getName().equalsIgnoreCase(name)) return obj;
 i++;
}
return null;
  }

  /**
   * returns the action as a String. The returned String complies with the
   * factsA1CL content language, as specified in the deliverable A12D1
   */
  public String toString() {
   String str="(action (agent-name "+getActor()+") (action-type "+getActionType()+") ";
   if (par > 0) {
    str = str + "(action-parameters [";
    for (int i=0; i<par; i++) 
      str = str + " " + getActionParameter(i).toString();
    str = str + "])";
   }
   return str+")";
  }
}










