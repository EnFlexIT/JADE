// Generated by Together/J
package demo.MeetingScheduler.CLP;


import java.util.*;

/**
 * This class implements an object of the ontology. The name of the
 * class is Concept, instead of Object, in order to not conflict with
 * the java class Object.
 * @see OntologyObject
 */
public class Concept extends OntologyObject {    
public Concept() {
super();
setType(OBJECT_TYPE);
}

  /**
   * returns the object type 
   */
public String getName(){
return super.getName();
}

  /**
   * sets the object type
   */
public void setName(String name) {
super.setName(name);
}

  /**
   * add a SimpleValue attribute, also called slot, to the object
   * @param name is the name of the attribute
   * @param value is the value of the attribute
   */
  public void addAttribute(String name, String value){
SimpleValue obj = new SimpleValue();
obj.setValue(value);
addAttribute(name, obj);
  }

  /**
   * add an attribute, also called slot, to the object
   * @param name is the name of the attribute
   * @param value is the value of the attribute, that is an OntologyObject
   */
  public void addAttribute(String name, OntologyObject value) {
addSlot(name,value);
  }

  /**
   * returns the number of Attributes of this object
   */
  public int getNumberOfAttributes(){
return getNumberOfSlots();
  }         

  /** 
   * returns the value of the attribute passed as parameter
   * @param attributeName the name of the attribute
   */
  public OntologyObject getAttributeValue(String attributeName){
return getSlot(attributeName);
  }

  /**
   * returns the value of the attribute in the given position
   * @param position the position of the attribute
   */
public OntologyObject getAttributeValue(int position){
Enumeration e = getAllSlots();
OntologyObject obj = (OntologyObject)e.nextElement();
position = getNumberOfAttributes()-position-1;
for (int i=0; i<position; i++)
 obj = (OntologyObject)e.nextElement();
return obj;
}

  /**
   * returns the name of the attribute in the given position
   * @param position the position of the attribute
   */
  public String getAttributeName(int position){
Enumeration e = getAllSlotNames();
String key = (String)e.nextElement();
position = getNumberOfAttributes()-position-1;
for (int i=0; i<position; i++)
 key = (String)e.nextElement();
return key;
  }

  /**
   * returns the object as a String. The returned String complies with the
   * factsA1CL content language, as specified in the deliverable A12D1
   */
    public String toString() {
     String str = "(" + getName();
     for (int i=0; i<getNumberOfAttributes(); i++)
      str = str + " (" + getAttributeName(i) + " " + getAttributeValue(i)+ ")";
     return str+")";
  }  
}






