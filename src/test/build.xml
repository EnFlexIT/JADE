
<!-- ANT BUILD FILE FOR THE TEST SUITE -->

<!-- The following targets are expected to be used by users:
ant testsuite - to compile test Suite
-->

<!-- set properties for this project -->
<project name="testsuite" default="compile" basedir="../..">
  <description>Test Suite build file</description>
  <property name="version" value="2.6"/>
  <property name="classpath" value="classes"/>
  <property name="src" value="src"/>
  <property name="dest" value="classes"/>
  
  <!-- Definitions for the LEAP target -->
  <property name="j2me-wtk-home" location="C:/Java/WTK104"/>
	<property name="boot-midp-classes" value="${j2me-wtk-home}/lib/midpapi.zip"/>
  <property name="javac" location="C:/Java/jdk1.4.1/bin/javac"/>
  <property name="leaphome" value="add-ons/leap" />
  <property name="leapmidp" value="${leaphome}/midp/lib/JadeLeap.jar" />
  <property name="unverified" value="${src}/test/unverified" />
  <property name="verified" value="${src}/test/verified" />
  
	<taskdef  name="preverify" classname="com.stampysoft.ant.j2me.PreverifyTask">
  	<classpath path ="${leaphome}/resources/antTasks/StampysoftAntTasks.jar" />
	</taskdef>
  <property name="j2mewtk.home" value="${j2me-wtk-home}"/>
  
  
  <!-- TARGETS -->
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
  </target>

  <!--   _______________________________________________
                               compile
         _______________________________________________ -->
  <target name="compile" depends="init" description="compile the tests">
  	<echo> NOTE: All JADE class files (including examples) must be in the 
  	jade/classes directory for this compilation to succeed 
  	</echo>
  	
  	<!-- Compile the java code source files -->
  	<javac srcdir="${src}/test" 
  	       destdir="${dest}" 
  	       classpath="${classpath}" 
  	       optimize="on" 
  	       deprecation="off">
  		<exclude name="TestAgent.java"/>
  		<exclude name="mobility/separate/**"/>
  		<exclude name="leap/midp/**"/>
  	</javac>
  				
  	<!-- RMIC the TSDaemon -->
    <rmic classname="test.common.remote.TSDaemon" base="${dest}"/>
    
    <!-- Copy images -->
    <copy todir="${dest}/test/common/testSuite/gui/images">
      <fileset dir="${src}/test/common/testSuite/gui/images"/>
    </copy> 
    
    <!-- Copy xml configuration files -->
    <copy file="${src}/test/testerList.xml" todir="${dest}/test"/>
    <copy file="${src}/test/behaviours/blockTimeOutTestsList.xml" todir="${dest}/test/behaviours"/>
    <copy file="${src}/test/behaviours/performanceTestsList.xml" todir="${dest}/test/behaviours"/>
    <copy file="${src}/test/common/xml/listTests.dtd" todir="${dest}/test/common/xml"/>
    <copy file="${src}/test/content/contentTestsList.xml" todir="${dest}/test/content"/>
    <copy file="${src}/test/content/SLOperatorTestsList.xml" todir="${dest}/test/content"/>
    <copy file="${src}/test/domain/jadeManagementOntoTestsList.xml" todir="${dest}/test/domain"/>
    <copy file="${src}/test/domain/ams/amsTestsList.xml" todir="${dest}/test/domain/ams"/>
    <copy file="${src}/test/domain/df/dfTestsList.xml" todir="${dest}/test/domain/df"/>
    <copy file="${src}/test/domain/df/persistentDFTestsList.xml" todir="${dest}/test/domain/df"/>
    <copy file="${src}/test/domain/df/df.properties" todir="${dest}/test/domain/df"/>
    <copy file="${src}/test/interPlatform/interPlatformTestsList.xml" todir="${dest}/test/interPlatform"/>
    <copy file="${src}/test/mobility/mobilityTestsList.xml" todir="${dest}/test/mobility"/>
    <copy file="${src}/test/mainReplication/mainReplicationTestsList.xml" todir="${dest}/test/mainReplication"/>
    <copy file="${src}/test/persDelivery/PersistentDeliveryTestsList.xml" todir="${dest}/test/persDelivery"/>
    <copy file="${src}/test/proto/achieveRETestsList.xml" todir="${dest}/test/proto"/>
    <copy file="${src}/test/proto/contractNetProtoTestsList.xml" todir="${dest}/test/proto"/>
    <copy file="${src}/test/proto/twoPhTestsList.xml" todir="${dest}/test/proto"/>
    <copy file="${src}/test/proto/proposeTestsList.xml" todir="${dest}/test/proto"/>
    <copy file="${src}/test/roundTripTime/roundTripTimeTestsList.xml" todir="${dest}/test/roundTripTime"/>
    <copy file="${src}/test/leap/LEAPTestsList.xml" todir="${dest}/test/leap"/>
  </target>

  <!--  __________________________________________________
                            lib
        __________________________________________________ -->
  <target name="lib" depends="compile" 
          description="Create a jar file including all Jade tests and the necessary examples">
		<delete file="${src}/test/test.jar" quiet="true"/>
		<jar jarfile="${src}/test/test.jar">
			<fileset dir="${dest}">
				<include name="**/test/**"/>
				<include name="**/examples/mobile/**"/>
				<include name="**/examples/content/**"/>
  			<exclude name="**/test/mobility/separate/**"/>
  			<exclude name="**/test/leap/midp/**"/>
			</fileset>
		</jar>
	</target>
	
  <!--  __________________________________________________
                            separate
        __________________________________________________ -->
  <target name="separate" depends="init" 
          description="Compile files that must be in a separate classpath for mobility tests">
  	<echo>NOTE that this target should be executed setting JAVA_HOME to jdk1.3 or earlier versions of Java to avoid problems when testing mobility on a PJAVA container
  	</echo>
  	
  	<javac srcdir="${src}/test" 
  	       destdir="${dest}" 
  	       includes="**/mobility/separate/**"
  	       classpath="${classpath}"
  	       target="1.1"
	         compiler="javac1.1"
  	       deprecation="off"/>

  	<delete file="${src}/test/separate.jar" quiet="true"/>
		<jar jarfile="${src}/test/separate.jar">
			<fileset dir="${dest}">
  			<include name="**/test/mobility/separate/**"/>
			</fileset>
		</jar>
		
		<delete dir = "${dest}/test/mobility/separate"/>
	</target>
	
  <!--  __________________________________________________
                            leap
        __________________________________________________ -->
  <target name="leap" depends="init" 
          description="Compile files to be executed in a MIDP environment">
  	
		<mkdir dir = "${verified}"/>
		<mkdir dir = "${unverified}"/>
		
    <javac srcdir="${src}/test" 
           destdir="${unverified}" 
           classpath="${leapmidp};${boot-midp-classes}" 
           nowarn="off" 
           optimize="on" 
           deprecation="on" 
  	       includes="**/leap/midp/**"
  	       verbose="false"
  	       fork="yes"
  	       executable="${javac}"
  	       compiler="modern"/>
  	       
    <unjar src="${leapmidp}" dest="${unverified}" />
		<preverify unverified="${unverified}" 
		           verified="${verified}"/>
		           
    
  	<delete file="${src}/test/testleap.jar" quiet="true"/>
		<jar jarfile="${src}/test/testleap.jar" basedir="${verified}" manifest="${src}/test/testleap.manifest"/>
		
		<delete dir = "${verified}"/>
		<delete dir = "${unverified}"/>
	</target>
	
  <!--  __________________________________________________
                            clean
        __________________________________________________ -->
  <target name="clean" description="clean up">
    <!-- Delete the ${build} directory tree -->
    <delete includeEmptyDirs="true">
      <fileset dir="${dest}/test"/>
    </delete>
  </target>

</project>