<?xml version="1.0" encoding="utf-8"?>

<!-- Relative reference to the DTD file does not work when the test suite is in a jar file
<!DOCTYPE TestsList SYSTEM "../../common/xml/listTests.dtd" [
	<!ENTITY % inline "#PCDATA|em|br|UL|LI|b">
	]>
-->

<TestsList> 
		<Test name="Basic topic registration and deregistration" skip="false">
			<TestClassName>test.topic.tests.TestRegistrationDeregistration</TestClassName>
			<WhatTest>This test checks the basic features of the TopicManagementService, i.e. registering and deregistering to a given topic  
			</WhatTest>
			<HowWorkTest>LOAD PHASE: An agent able to send messages about topic T on demand is created. The tester agent i) registers to topic T, ii) triggers the emission of a message about topic T, ii) deregisters from topic T and iv) triggers the emission of another message about topic T
			</HowWorkTest>
			<WhenTestPass>The test passes if only the first message about topic T is received
			</WhenTestPass>
		</Test>
		<Test name="Multiple topic registrations" skip="false">
			<TestClassName>test.topic.tests.TestMultipleRegistrations</TestClassName>
			<WhatTest>This test checks that the TopicManagementService correctly delivers a message about topic T to all (more than one in this case) agents that registered to topic T
			</WhatTest>
			<HowWorkTest>LOAD PHASE: An agent able to send messages about topic T on demand and two agents registering to topic T are created,  i) The tester agent triggers the emission of a message about topic T, ii) The tester agent waits for notifications about both registered agents
			</HowWorkTest>
			<WhenTestPass>The test passes if both registered agents correcty receive the message about topic T
			</WhenTestPass>
		</Test>
		<Test name="Topic template" skip="false">
			<TestClassName>test.topic.tests.TestTopicTemplate</TestClassName>
			<WhatTest>This test checks that the TopicManagementService correctly deals with a topic registration refering to a topic template i.e. a topic of the form foo.bar.*
			</WhatTest>
			<HowWorkTest>LOAD PHASE: An agent able to send messages about topic T on demand is created. The tester agent i) registers to topic template T.*, ii) triggers the emission of a message about topic T, iii) triggers the emission of a message about topic T.sub1, iv) triggers the emission of a message about topic Tsub1 (note the difference with T.sub1), v) deregisters from topic template T.*
			</HowWorkTest>
			<WhenTestPass>The test passes if 2 messages are received
			</WhenTestPass>
		</Test>
		<Test name="Topic registration propagation to new containers" skip="false">
			<TestClassName>test.topic.tests.TestRegistrationPropagation</TestClassName>
			<WhatTest>This test checks if current topic registrations are correctly propagated to a newly started container
			</WhatTest>
			<HowWorkTest>LOAD PHASE: none. The tester agent i) registers to topic T, ii) creates a new container with an agent able to send messages about topic T on demand, iii) triggers the emission of a message about topic T, iv) deregisters from topic T. 
			</HowWorkTest>
			<WhenTestPass>The test passes if 1 message is received
			</WhenTestPass>
		</Test>
</TestsList>

