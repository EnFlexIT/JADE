/*
	A basic extension of the java.awt.Dialog class
 */
package examples.ex2;
import java.awt.*;

public class AboutDialog extends Dialog {

  public AboutDialog(Frame parent, boolean modal) {
    super(parent, modal);

    // This code is automatically generated by Visual Cafe when you add
    // components to the visual environment. It instantiates and initializes
    // the components. To modify the code, only use code syntax that matches
    // what Visual Cafe can generate, or Visual Cafe may be unable to back
    // parse your Java file into its visual environment.

    //{{INIT_CONTROLS
    setLayout(null);
    setVisible(false);
    setSize(249,150);
    okButton = new java.awt.Button();
    okButton.setLabel("OK");
    okButton.setBounds(95,85,66,27);
    add(okButton);
    textArea1 = new java.awt.TextArea("",0,0,TextArea.SCROLLBARS_NONE);
    textArea1.setEditable(false);
    textArea1.setText("This is a FilebasedSenderAgent. Select a file with the message you want to send and this agent will send the message. In the central frame all the received messages are displayed.");
    textArea1.setBounds(0,0,249,150);
    add(textArea1);
    setTitle("About");
    //}}

    //{{REGISTER_LISTENERS
    SymWindow aSymWindow = new SymWindow();
    this.addWindowListener(aSymWindow);
    SymAction lSymAction = new SymAction();
    okButton.addActionListener(lSymAction);
    //}}

  }

  public AboutDialog(Frame parent, String title, boolean modal) {
    this(parent, modal);
    setTitle(title);
  }

  public void addNotify() {
    // Record the size of the window prior to calling parents addNotify.
    Dimension d = getSize();

    super.addNotify();

    // Only do this once.
    if (fComponentsAdjusted)
      return;

    // Adjust components according to the insets
    setSize(getInsets().left + getInsets().right + d.width, getInsets().top + getInsets().bottom + d.height);
    Component components[] = getComponents();
    for (int i = 0; i < components.length; i++) {
      Point p = components[i].getLocation();
      p.translate(getInsets().left, getInsets().top);
      components[i].setLocation(p);
    }

    // Used for addNotify check.
    fComponentsAdjusted = true;
  }

  public void setVisible(boolean b) {
    if (b) {
      Rectangle bounds = getParent().getBounds();
      Rectangle abounds = getBounds();

      setLocation(bounds.x + (bounds.width - abounds.width)/ 2,
		  bounds.y + (bounds.height - abounds.height)/2);
    }

    super.setVisible(b);
  }

  //{{DECLARE_CONTROLS
  java.awt.Button okButton;
  java.awt.TextArea textArea1;
  //}}

  // Used for addNotify check.
  boolean fComponentsAdjusted = false;

  class SymWindow extends java.awt.event.WindowAdapter {
    public void windowClosing(java.awt.event.WindowEvent event) {
      Object object = event.getSource();
      if (object == AboutDialog.this)
	AboutDialog_WindowClosing(event);
    }
  }

  void AboutDialog_WindowClosing(java.awt.event.WindowEvent event) {
    dispose();
  }

  class SymAction implements java.awt.event.ActionListener {
    public void actionPerformed(java.awt.event.ActionEvent event) {
      Object object = event.getSource();
      if (object == okButton)
	okButton_Clicked(event);
    }
  }

  void okButton_Clicked(java.awt.event.ActionEvent event) {
    //{{CONNECTION
    // Clicked from okButton Hide the Dialog
    dispose();
    //}}
  }
}
