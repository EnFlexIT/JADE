<?xml version="1.0" encoding="utf-8" ?>
<!-- Relative reference to the DTD file does not work when the test suite is in a jar file
<!DOCTYPE TestsList SYSTEM "../common/xml/listTests.dtd" [
	<!ENTITY % inline "#PCDATA|em|br|UL|LI|b">
	]>
-->
	<TestsList> 
		<Test name="Send acceptances one by one" skip="false">
			<TestClassName>test.proto.tests.contractNet.TestMoreAcceptances</TestClassName>
			<WhatTest> Tests sending the acceptances to agents that replied with a PROPOSE one by one.</WhatTest>
			<HowWorkTest>All handlers are defined overriding methods.</HowWorkTest>
			<WhenTestPass> The test passes if the execution terminates correctly... </WhenTestPass>
		</Test>		
		<Test name="Normal flow with 1 responder" skip="false">
			<TestClassName>test.proto.tests.contractNet.TestNormal1Resp</TestClassName>
			<WhatTest> Tests the normal flow of messages with a single responder.</WhatTest>
			<HowWorkTest>All handlers are defined overriding methods.</HowWorkTest>
			<WhenTestPass> The test passes if the execution terminates correctly... </WhenTestPass>
		</Test>		
		<Test name="Mixed flow with N responders" skip="false">
			<TestClassName>test.proto.tests.contractNet.TestMixedNResp</TestClassName>
			<WhatTest> Tests a mixed flow of messages with N responder behaving differently.</WhatTest>
			<HowWorkTest> 
				More in details:
				<UL>
	   			<LI>Resp0 reacts with NOT_UNDERSTOOD;</LI>
	   			<LI>Resp1 reacts with REFUSE;</LI>
	   			<LI>Resp2 reacts with INFORM;</LI>
			    <LI>Resp3 reacts with REQUEST;</LI>
			    <LI>Resp4 does not react at all;</LI>
			    <LI>Resp5 reacts with PROPOSE and then INFORM</LI>
				<LI>Resp6 reacts with PROPOSE and then FAILURE;</LI>
	   			<LI>Resp7 reacts with PROPOSE and then REQUEST;</LI>
			    <LI>Resp8 reacts with PROPOSE and then nothing;</LI>
			    <LI>Resp9 does not exist;</LI>
			    </UL>
			    <br></br><em>NOTES: All handlers are defined overriding methods. This test will take about 20 sec.</em>			
		    </HowWorkTest>
			<WhenTestPass> The test passes if no exception is fired.</WhenTestPass>
		</Test>		
		<Test name="Mixed flow with N responders 2 rounds" skip="false">
			<TestClassName>test.proto.tests.contractNet.TestMixedNResp2Rounds</TestClassName>
			<WhatTest> See <b>Mixed flow with N responders</b>, but performs the test 2 times.</WhatTest>
			<HowWorkTest> 
				This is achieved by registering a new ContractNetInitiator in the HANDLE_ALL_RESULT_NOTIFICAIONS state.
				<br></br>In this way we test:
				<UL>
	   			<LI>The repetitive behaviour of the responders;</LI>
	   			<LI>Registering a composite behaviour as a state of the protocol;</LI>
				</UL>				
			    <br></br><em>NOTES: This test will take about 40 sec.</em>			
			</HowWorkTest>
			<WhenTestPass> The test pass when Ping agent answers correctly... </WhenTestPass>
		</Test>		
		<Test name="Initiator nested in responder" skip="false">
			<TestClassName>test.proto.tests.contractNet.TestInitiatorNestedInResponder</TestClassName>
			<WhatTest>Test registering an inner ContractNetInitiator as a state of a ContractNetResponder.
			</WhatTest>
			<HowWorkTest>A utility agent is started running a ContractNetResponder with a ContractNetInitiator registered in its HANDLE_CFP state.
			The tester agent executes a ContractNetInitator and, in parallel, a ContractNetResponder that will reply to the nested initiator executed by the utility agent.
			All responders reply with a PROPOSE and then with an INFORM.
			</HowWorkTest>
			<WhenTestPass>The test passes if all protocols are successfully completed as expected.
			</WhenTestPass>
		</Test>		

		<Test name="Iterated Contract Net" skip="false">
			<TestClassName>test.proto.tests.contractNet.TestSSIteratedContractNetResponder</TestClassName>
			<WhatTest>Test the usage of the ContractNetInitiator and SSIteratedContractNetResponder classes to implement an iterated-contract-net protocol 
			</WhatTest>
			<HowWorkTest>
			</HowWorkTest>
			<WhenTestPass>
			</WhenTestPass>
		</Test>		
	</TestsList>
